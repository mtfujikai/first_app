

#コントローラーにアクションを定義する
#↓アクション = コントローター内におけるう、処理のカテゴリー↓
#index = 一覧表示ページを表示するリクエストに対応して動く
#new = 新規投稿ページを表示するリクエストに対応して動く
#create = データの投稿を行うリクエストに対応して動く
#show = 個別詳細ページを表示するリクエストに対応して動く
#edit = 投稿編集ページを表示するリクエストに対応して動く
#update = データの編集を行うリクエストに対応して動く
#destroy = データの削除を行うリクエストに対応して動く

#ルーティングに対するここでのアクションは一覧ページを表示する(index)
class PostsController < ApplicationController
    def index #indexアクションを定義した
        @posts = Post.all #テーブル内のデータずべてを@postに代入。
    end
    def new
    end
    def create
        Post.create(content: params[:content])
    end
end

#コントローラーのこの一覧ページを表示するアクションに対し、
#ビューファイルに何も記述がなく、表示するコンテンツがまだ存在していない。
#コントローラーでアクションを定義した後はページの視覚情報を返す
#ビューが呼び出されるため。
#WEBアプリには処理だけではなくアクションを実行した後に、ブラウザに表示する画面の見た目を決めるビューが必要。
#ビュー = ブラウザにレスポンスとして返す見た目
#コントローラー = アクションの処理後、対応するビューに該当するファイルを探し、
#レスポンスとして返す。


#コントローラーとルーティングで指定している名称は合致する必要がある。

#テンプレートエンジン = テンプレにデータとなる記述を埋めることで、
#最終的に別のファイルとして生成できる仕組み。

#EBR = HTMLにRubyの記述を埋め込むことができるテンプレから、
#HTMLファイルを生成できるテンプレートエンジン。(Embegged Ruby)
#RailsにおけるERBファイルは、○○.html.erbの拡張子を使用する。
#〇〇には対応するアクション名を記入します。

